[{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to rbi.helpers","text":"easiest way install latest stable version rbi.helpers via CRAN. package name rbi.helpers (lowercase): Alternatively, current development version can installed using remotes package functions rbi.helpers package require working installation LibBi. Please see rbi vignette get one via homebrew linuxbrew.","code":"install.packages(\"rbi.helpers\") remotes::install_github(\"sbfnk/rbi.helpers\")"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the package","title":"Introduction to rbi.helpers","text":"Use load package.","code":"library(\"rbi\") library(\"rbi.helpers\")"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"loading-the-model-and-generating-a-synthetic-dataset","dir":"Articles","previous_headings":"","what":"Loading the model and generating a synthetic dataset","title":"Introduction to rbi.helpers","text":"steps reproduced rbi vignette, information individual steps","code":"model_file <- system.file(package = \"rbi\", \"SIR.bi\") # file included in package sir_model <- bi_model(model_file) # load model set.seed(1001912) sir_data <- bi_generate_dataset(sir_model, end_time = 16 * 7, noutputs = 16)"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"adapt-the-number-of-particles","dir":"Articles","previous_headings":"","what":"Adapt the number of particles","title":"Introduction to rbi.helpers","text":"rbi vignette, stochastic SIR model fitted simulated data model using particle Markov-chain Monte Carlo 32 particles. Given model data, know many particles need? question simple answer, “optimal” number particles may depend state Markov chain. possible rule--thumb choose number particles variance log-likelihood near mode approximately one. suggests strategy first approximate location mode mean posterior distribution obtained trial run, numer particles adjusted monitoring variance log-likelihood keeping parameters fixed. rbi.helpers implements second part strategy (adjusting number particles given location parameter space) adapt_particles method. first part (finding mode), crude method take fixed number samples prior distribution choose one maximises posterior. rbi, can achieved runs particle MCMC prior distribution proposal distribution (proposal = \"prior\"), case 4 particles. words, sampling posterior proposals drawn independently prior distribution. Note set seed make results reproducible. worth trying commands different seed seeing difference results obtained . location parameters sampler end 1000 iterations give approximation mode posterior distribution. can used adjust number particles using take last sample output file contained libbi object bi_prior, use adjust number particles starting 1 particle (given min) doubling variance loglikelihood crosses 1. number particles saved adapted object:","code":"bi_prior <- sample(   proposal = \"prior\", sir_model, nsamples = 1000, end_time = 16 * 7,   nparticles = 4, obs = sir_data, seed = 1234 ) adapted <- adapt_particles(bi_prior) #> Tue Aug 15 07:12:41 2023 Adapting the number of particles #> Tue Aug 15 07:13:03 2023 4 particles, loglikelihod variance: 1.66872911536756 #> Tue Aug 15 07:13:08 2023 8 particles, loglikelihod variance: 1.19505440796246 #> Tue Aug 15 07:13:13 2023 16 particles, loglikelihod variance: 0.965995392125263 #> Tue Aug 15 07:13:13 2023 Choosing 16 particles. adapted$options$nparticles #> [1] 16"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"adapt-the-proposal-distribution","dir":"Articles","previous_headings":"","what":"Adapt the proposal distribution","title":"Introduction to rbi.helpers","text":"adjusted number particles, second important information give posterior sampler proposal distribution. can, , obtained using sequence trial runs, whereby proposal distribution sequentially adjusted previous samples proportional empirical covariance posterior samples. way implemented adapt_proposal function rbi.helpers proposal distribution adjusted come multivariate normal taking account covariance samples obtained far, acceptance rate lies given minimum maximumad. example, adjust proposal distribution acceptance rate 0.05 0.4, can run: covariance matrices parameters initial conditions stored input file contained libbi object adapted","code":"adapted <- adapt_proposal(adapted, min = 0.05, max = 0.4) #> Tue Aug 15 07:13:13 2023 Adapting the proposal distribution #> Tue Aug 15 07:13:13 2023 Initial trial run #> Tue Aug 15 07:13:37 2023 Acceptance rate 0.468468468468468, adapting size with scale 1 #> Tue Aug 15 07:13:42 2023 Acceptance rate 0.414414414414414, adapting size with scale 2 #> Tue Aug 15 07:13:47 2023 Acceptance rate: 0.306306306306306 bi_read(adapted, file = \"input\") #> $`__proposal_parameter_cov` #>   __dim_parameter_cov.1 __dim_parameter_cov.2       value #> 1                 p_rep                 p_rep 0.009676395 #> 2                 p_rep                  p_R0 0.000000000 #> 3                  p_R0                 p_rep 0.000000000 #> 4                  p_R0                  p_R0 0.461986363"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"compute-dic","dir":"Articles","previous_headings":"","what":"Compute DIC","title":"Introduction to rbi.helpers","text":"compute Deviance Information Criterion (DIC), use DIC: samples posterior distribution using adapted number particles proposal distribution calculates DIC.","code":"posterior <- sample(adapted) DIC(posterior) #> [1] 38.46706"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"convert-between-libbi-times-and-actual-times-or-dates","dir":"Articles","previous_headings":"","what":"Convert between LibBi times and actual times or dates","title":"Introduction to rbi.helpers","text":"LibBi uses real-valued times. convert time date objects use R, use numeric_to_time function: function time_to_numeric converse, converting R times dates numeric values use LibBi:","code":"res <- numeric_to_time(posterior, unit = \"day\", origin = as.Date(\"2018-04-01\")) head(res$Z) #>   np       time       value #> 1  0 2018-04-01   1.0000000 #> 2  0 2018-04-08   0.5700822 #> 3  0 2018-04-15   4.4669582 #> 4  0 2018-04-22  92.7540209 #> 5  0 2018-04-29 428.5571654 #> 6  0 2018-05-06 204.5738370 orig <- time_to_numeric(res, unit = \"day\", origin = as.Date(\"2018-04-01\")) head(orig$Z) #>   np time       value #> 1  0    0   1.0000000 #> 2  0    7   0.5700822 #> 3  0   14   4.4669582 #> 4  0   21  92.7540209 #> 5  0   28 428.5571654 #> 6  0   35 204.5738370"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.helpers.html","id":"create-inference-chains","dir":"Articles","previous_headings":"","what":"Create inference chains","title":"Introduction to rbi.helpers","text":"pipe operator available since R version 4.1, possible construct inference chains elegantly. example, get posterior samples adapted Metropolis-Hastings including sampled observations, written","code":"posterior <- sample(   proposal = \"prior\", sir_model, nsamples = 1000,   end_time = 16 * 7, nparticles = 4, obs = sir_data, seed = 1234 ) |>   adapt_particles() |>   adapt_proposal(min = 0.05, max = 0.4) |>   sample(nsamples = 5000) |>   sample_obs() #> Tue Aug 15 07:14:10 2023 Adapting the proposal distribution #> Tue Aug 15 07:14:54 2023 Adapting the number of particles #> Tue Aug 15 07:15:16 2023 4 particles, loglikelihod variance: 1.90228595419509 #> Tue Aug 15 07:15:21 2023 8 particles, loglikelihod variance: 0.931236269625011 #> Tue Aug 15 07:15:21 2023 Choosing 8 particles. #> Tue Aug 15 07:15:22 2023 Initial trial run #> Tue Aug 15 07:15:44 2023 Acceptance rate: 0.267267267267267"},{"path":"https://sbfnk.github.io/rbi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Funk. Maintainer.","code":""},{"path":"https://sbfnk.github.io/rbi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Funk S (2023). rbi.helpers: 'rbi' Helper Functions. https://libbi.org, https://github.com/sbfnk/rbi, https://github.com/sbfnk/rbi.helpers.","code":"@Manual{,   title = {rbi.helpers: 'rbi' Helper Functions},   author = {Sebastian Funk},   year = {2023},   note = {https://libbi.org, https://github.com/sbfnk/rbi, https://github.com/sbfnk/rbi.helpers}, }"},{"path":"https://sbfnk.github.io/rbi/index.html","id":"helper-functions-for-the-rbi-package","dir":"","previous_headings":"","what":"rbi Helper Functions","title":"rbi Helper Functions","text":"rbi.helpers collection helper functions use rbi, R interface LibBi, library Bayesian Inference. contains: adapt_proposal, adapt proposal distribution model according empirical standard deviations accepted parameters adapt_particles, adapt number particles given point parameter space. DIC, compute DIC pMCMC run acceptance_rate, calculate acceptance rate pMCMC run","code":""},{"path":"https://sbfnk.github.io/rbi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"rbi Helper Functions","text":"easiest way install rbi.helpers use remotes package:","code":"# install.packages(\"remotes\") remotes::install_github(\"sbfnk/rbi.helpers\")"},{"path":"https://sbfnk.github.io/rbi/reference/DIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","title":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","text":"Computes DIC libbi object containing Monte-Carlo samples.   effective number parameters calculated following Gelman et al.,   Bayesian Data Analysis: Second Edition, 2004, p. 182.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/DIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","text":"","code":"# S3 method for libbi DIC(x, bootstrap = 0, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/DIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","text":"x libbi object bootstrap number bootstrap samples take, 0 just take data ... parameters passed `bi_read` (e.g., `burn`)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/DIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","text":"DIC","code":""},{"path":"https://sbfnk.github.io/rbi/reference/DIC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/DIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Deviance Information Criterion (DIC) for a libbi model — DIC","text":"","code":"example_run <- rbi::bi_read(   system.file(package = \"rbi\", \"example_output.nc\") ) example_model_file <- system.file(package = \"rbi\", \"PZ.bi\") example_bi <- rbi::attach_data(   rbi::libbi(example_model_file), \"output\", example_run ) DIC(example_bi) #> [1] 173.834"},{"path":"https://sbfnk.github.io/rbi/reference/acceptance_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute acceptance rate — acceptance_rate","title":"Compute acceptance rate — acceptance_rate","text":"function takes provided libbi object run, bi file, returns acceptance rate","code":""},{"path":"https://sbfnk.github.io/rbi/reference/acceptance_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute acceptance rate — acceptance_rate","text":"","code":"acceptance_rate(...)"},{"path":"https://sbfnk.github.io/rbi/reference/acceptance_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute acceptance rate — acceptance_rate","text":"... parameters get_traces (especially 'x')","code":""},{"path":"https://sbfnk.github.io/rbi/reference/acceptance_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute acceptance rate — acceptance_rate","text":"acceptance rate","code":""},{"path":"https://sbfnk.github.io/rbi/reference/acceptance_rate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute acceptance rate — acceptance_rate","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/acceptance_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute acceptance rate — acceptance_rate","text":"","code":"example_run <- rbi::bi_read(   system.file(package = \"rbi.helpers\", \"example_run.nc\") ) example_model_file <- system.file(package = \"rbi\", \"PZ.bi\") example_bi <- rbi::attach_data(   rbi::libbi(example_model_file), \"output\", example_run ) acceptance_rate(example_bi) #> [1] 0.4040404"},{"path":"https://sbfnk.github.io/rbi/reference/adapt_particles.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapt the number of particles — adapt_particles","title":"Adapt the number of particles — adapt_particles","text":"function takes provided libbi runs   MCMC single point (.e., repeatedly proposing parameters),   adapting number particles distribution variance   log-likelihood crosses value given target.variance (1   default).","code":""},{"path":"https://sbfnk.github.io/rbi/reference/adapt_particles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adapt the number of particles — adapt_particles","text":"","code":"adapt_particles(   x,   min = 1,   max = 1024,   target_variance = 1,   quiet = FALSE,   target.variance,   ... )"},{"path":"https://sbfnk.github.io/rbi/reference/adapt_particles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adapt the number of particles — adapt_particles","text":"x libbi object min minimum number particles max maximum number particles target_variance target log-likelihood variance; crossed, current number particles used quiet set TRUE, provide running output particle numbers tested target.variance deprecated; use target_variance instead ... parameters libbi$run","code":""},{"path":"https://sbfnk.github.io/rbi/reference/adapt_particles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adapt the number of particles — adapt_particles","text":"libbi desired proposal distribution","code":""},{"path":"https://sbfnk.github.io/rbi/reference/adapt_particles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adapt the number of particles — adapt_particles","text":"","code":"example_obs <- rbi::bi_read(system.file(package=\"rbi\", \"example_dataset.nc\")) example_model <- rbi::bi_model(system.file(package=\"rbi\", \"PZ.bi\")) example_bi <- rbi::libbi(model = example_model, obs = example_obs) obs_states <- rbi::var_names(example_model, type = \"obs\") max_time <- max(vapply(example_obs[obs_states], function(x) {   max(x[[\"time\"]]) }, 0)) if (FALSE) {   adapted <- adapt_particles(example_bi, nsamples = 128, end_time = max_time) }"},{"path":"https://sbfnk.github.io/rbi/reference/adapt_proposal.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapt the proposal distribution of MCMC using the covariance\n  of samples — adapt_proposal","title":"Adapt the proposal distribution of MCMC using the covariance\n  of samples — adapt_proposal","text":"function takes provided libbi object   runs MCMC, adapting proposal distribution desired   acceptance rate achieved. scale given, used   adapt proposal iteration","code":""},{"path":"https://sbfnk.github.io/rbi/reference/adapt_proposal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adapt the proposal distribution of MCMC using the covariance\n  of samples — adapt_proposal","text":"","code":"adapt_proposal(   x,   min = 0,   max = 1,   scale = 2,   max_iter = 10,   adapt = c(\"size\", \"shape\", \"both\"),   size = FALSE,   correlations = TRUE,   truncate = TRUE,   quiet = FALSE,   ... )"},{"path":"https://sbfnk.github.io/rbi/reference/adapt_proposal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adapt the proposal distribution of MCMC using the covariance\n  of samples — adapt_proposal","text":"x link{libbi} object min minimum acceptance rate max maximum acceptance rate scale scale multiplier/divider proposal. >1 inverted. max_iter maximum iterations (default: 10) adapt adapt; \"size\" (default), width independent   proposals adapted; \"shape\", proposals dependent   (following multivariate normal) taking account empirical   correlations; \"\", size adapted shape size (deprecated, use {adapt} instead) TRUE (default: FALSE), size (diagonal multivariate normal) proposal distribution adapted correlations (deprecated, use {adapt} instead) TRUE (default: FALSE), shape (diagonal multivariate normal) proposal distribution adapted according empirical covariance truncate TRUE, proposal distributions truncated according support prior distributions quiet set TRUE, provide running output particle numbers tested ... parameters sample","code":""},{"path":"https://sbfnk.github.io/rbi/reference/adapt_proposal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adapt the proposal distribution of MCMC using the covariance\n  of samples — adapt_proposal","text":"libbi desired proposal distribution","code":""},{"path":"https://sbfnk.github.io/rbi/reference/adapt_proposal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adapt the proposal distribution of MCMC using the covariance\n  of samples — adapt_proposal","text":"","code":"example_obs <- rbi::bi_read(system.file(package=\"rbi\", \"example_dataset.nc\")) example_model <- rbi::bi_model(system.file(package=\"rbi\", \"PZ.bi\")) example_bi <- rbi::libbi(model = example_model, obs = example_obs) obs_states <- rbi::var_names(example_model, type=\"obs\") max_time <- max(vapply(example_obs[obs_states], function(x) {   max(x[[\"time\"]]) }, 0)) # adapt to acceptance rate between 0.1 and 0.5 if (FALSE) {   adapted <- adapt_proposal(example_bi,     nsamples = 100, end_time = max_time,     min = 0.1, max = 0.5, nparticles = 256, correlations = TRUE   ) }"},{"path":"https://sbfnk.github.io/rbi/reference/get_mvn_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a covariance matrix — get_mvn_params","title":"Construct a covariance matrix — get_mvn_params","text":"function takes provided libbi run returns square root covariance matrix, can used proposal distributions","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_mvn_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a covariance matrix — get_mvn_params","text":"","code":"get_mvn_params(x, scale = 1, correlations = TRUE, fix)"},{"path":"https://sbfnk.github.io/rbi/reference/get_mvn_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a covariance matrix — get_mvn_params","text":"x libbi run scale factor scale elements covariance matrix correlations logical; TRUE, correlations taken account constructing parameters fix set, elements covariance matrix set ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_mvn_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a covariance matrix — get_mvn_params","text":"updated bi model","code":""},{"path":"https://sbfnk.github.io/rbi/reference/numeric_to_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric times to actual times or dates — numeric_to_time","title":"Convert numeric times to actual times or dates — numeric_to_time","text":"function converts numeric times (.e., 0, 1, 2, ...)   actual times dates","code":""},{"path":"https://sbfnk.github.io/rbi/reference/numeric_to_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric times to actual times or dates — numeric_to_time","text":"","code":"numeric_to_time(x, origin, unit, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/numeric_to_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric times to actual times or dates — numeric_to_time","text":"x libbi object run, list data frames containing state trajectories (returned bi_read) origin time origin, .e. date time corresponding time 0 unit unit time time step corresponds ; must unit understood lubridate::period, optionally number advance, e.g. \"day\" \"2 weeks\" \"3 seconds\" ... arguments bi_read (e.g., file)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/numeric_to_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric times to actual times or dates — numeric_to_time","text":"list data frames returned bi_read, real   times","code":""},{"path":"https://sbfnk.github.io/rbi/reference/split_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a unit string — split_unit","title":"Split a unit string — split_unit","text":"Splits unit string (e.g., \"2 weeks\") amount (2) unit (\"weeks\")","code":""},{"path":"https://sbfnk.github.io/rbi/reference/split_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a unit string — split_unit","text":"","code":"split_unit(unit_string)"},{"path":"https://sbfnk.github.io/rbi/reference/split_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a unit string — split_unit","text":"unit_string string split","code":""},{"path":"https://sbfnk.github.io/rbi/reference/split_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a unit string — split_unit","text":"list two elements, \"num\" (amount) \"unit\", , use   lubridate::period","code":""},{"path":"https://sbfnk.github.io/rbi/reference/split_unit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split a unit string — split_unit","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/time_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert actual times or dates to numeric times — time_to_numeric","title":"Convert actual times or dates to numeric times — time_to_numeric","text":"function converts real times/dates numeric times   (0, 1, 2, ...)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/time_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert actual times or dates to numeric times — time_to_numeric","text":"","code":"time_to_numeric(x, origin, unit)"},{"path":"https://sbfnk.github.io/rbi/reference/time_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert actual times or dates to numeric times — time_to_numeric","text":"x data frame containing \"time\" column, list containing data frames origin time origin, .e. date time corresponding time 0 unit unit time time step corresponds ; must unit understood lubridate::period, optionally number advance, e.g. \"day\" \"2 weeks\" \"3 seconds\"","code":""},{"path":"https://sbfnk.github.io/rbi/reference/time_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert actual times or dates to numeric times — time_to_numeric","text":"list data frames can passed libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/update_proposal.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a proposal from run results — update_proposal","title":"Construct a proposal from run results — update_proposal","text":"function takes provided bi_model adds generic Gaussian proposal distribution.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/update_proposal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a proposal from run results — update_proposal","text":"","code":"update_proposal(model, truncate = TRUE, blocks = c(\"parameter\", \"initial\"))"},{"path":"https://sbfnk.github.io/rbi/reference/update_proposal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a proposal from run results — update_proposal","text":"model bi_model object truncate truncate multivariate normal proposals according used priors, e.g. truncating parameter beta prior 0 1 blocks blocks use (\"parameter\" \"initial\")","code":""},{"path":"https://sbfnk.github.io/rbi/reference/update_proposal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a proposal from run results — update_proposal","text":"updated bi model","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-040","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.4.0","title":"rbi.helpers 0.4.0","text":"add github actions package checking testing fix adaptation one parameter","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-033","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.3.3","title":"rbi.helpers 0.3.3","text":"CRAN release: 2022-11-16 adds missing dependency CRAN","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-032","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.3.2","title":"rbi.helpers 0.3.2","text":"CRAN release: 2020-06-18 version bump CRAN resubmission","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-031","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.3.1","title":"rbi.helpers 0.3.1","text":"CRAN release: 2019-07-10 removed obsolete test adapt_particles","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-030","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.3.0","title":"rbi.helpers 0.3.0","text":"CRAN release: 2019-02-22 new vignette: Introduction rbi.helpers removed bloated plot function; plotting now covered RBi vignette adaptive MCMC using full empirical covariance speed proposal particle adaptations avoiding recompiles quiet option adapt_mcmc adapt_particles times operations convert numeric R times/dates innumerable bug fixes","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-02","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.2","title":"rbi.helpers 0.2","text":"Bug fixes cosmetic changes","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbihelpers-01","dir":"Changelog","previous_headings":"","what":"rbi.helpers 0.1","title":"rbi.helpers 0.1","text":"initial version","code":""}]
